

#jpa setting
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect

#db setting
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=${DBurl}
spring.datasource.username=${DBID}
spring.datasource.password=foodfood

#views
spring.mvc.view.prefix=/WEB-INF/view/
spring.mvc.view.suffix=.jsp

# File
## íì¼ìë¡ë ì¬ì©
spring.servlet.multipart.enabled=true
# íì¼ ìë¡ë ê²½ë¡ - /upload/ í´ëì ì ëê²½ë¡ ì¬ì©
#upload.path=C:/ITStudy/06_springBoot/demo1/src/main/webapp/upload/
upload.path=https://food-fisa.s3.ap-northeast-2.amazonaws.com/upload/
# ì¬ë¼ê° íì¼ì ìµë í¬ê¸°
spring.servlet.multipart.max-file-size=10MB
# í ë²ì ìµë ìë¡ë ê°ë¥í ì©ë
spring.servlet.multipart.max-request-size=10MB
#server.error.whitelabel.enabled=false

aws.s3.endpoint=https://food-fisa.s3.ap-northeast-2.amazonaws.com/
aws.s3.region=ap-northeast-2
aws.s3.access-key=AKIA2WTJJMHWXDTRGVH3
aws.s3.secret-key=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



# logging trace < debug < info < warn < error < fatal - 특별히 설정하지 않으면 info
# 로그를 기록할 레벨 순서
logging.level.root=info
#logging.level.com.example.demo.controller=debug
#logging.level.com.example.demo.service=info

# 로그파일을 유지할 기간
logging.logback.rollingpolicy.max-history=30
# 로그파일 1개의 최대 용량
logging.logback.rollingpolicy.max-file-size=100MB
# 로그파일 이름
logging.file.name=logs/demo.log
# 로그파일이 설정한 용량을 초과하거나 날짜가 변경될 경우 새로 만들어질 파일명
logging.logback.rollingpolicy.file-name-pattern=${LOG_FILE}.%d{yyyy-MM-dd}-%i.log
# 로그파일에서 사용할 날짜 시간 형식과 타임존
logging.pattern.dateformat=yyyy-MM-dd HH:mm:ss.SSS,Asia/Seoul


server.tomcat.remote-ip-header=x-forwarded-for
server.tomcat.protocol-header=x-forwarded-proto